@*@model IEnumerable<CharityStartAtHome.Models.Cloth>*@
@model PagedList.IPagedList<CharityStartAtHome.Models.Cloth>
@*@{
        ViewBag.Title = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }*@
@using PagedList.Mvc;
<style>
    .back-to-top {
        cursor: pointer;
        position: fixed;
        bottom: 20px;
        right: 20px;
        display: none;
    }

    #map {
        height: 600px;
        width: 100%;
    }

    select {
        color: #2aaf8e;
    }

    h1 {
        font-family: "Arial Black", Gadget, sans-serif;
        color: #2aaf8e;
        font-size: 40px;
    }

    h2 {
        font-family: "Arial Black", Gadget, sans-serif;
        color: #2aaf8e;
        font-size: 30px;
    }

    h3 {
        font-family: 'Arial Unicode MS';
        color: #2aaf8e;
        font-size: 20px;
    }

    ul {
        font-family: 'Arial Unicode MS';
    }

    body {
        margin-left: 40px;
        margin-right: 40px;
    }

    h4 {
        font-family: 'Arial Unicode MS';
        color: #2aaf8e;
        font-size: 15px;
    }

    p {
        font-family: 'Arial Unicode MS';
        font-size: 20px;
    }

    b {
        font-family: 'Arial Unicode MS';
        color: #2aaf8e;
        font-size: 20px;
    }

    ul.pagination {
        margin: 0;
    }

    .pagination li {
        list-style-type: none;
        float: left;
        min-width: 15px;
    }



    input[type=text] {
        width: 70%;
        box-sizing: border-box;
        border: 2px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
        background-color: white;
        background-image: url('searchicon.png');
        background-position: 10px 10px;
        background-repeat: no-repeat;
        padding: 12px 20px 12px 40px;
        -webkit-transition: width 0.4s ease-in-out;
        transition: width 0.4s ease-in-out;
    }

        input[type=text]:focus {
            width: 70%;
        }

    .text {
        font-family: 'Arial Unicode MS';
        color: #2aaf8e;
        font-size: 20px;
    }

    ul.breadcrumb {
        padding: 8px 16px;
        list-style: none;
        background-color: #eee;
    }

        ul.breadcrumb li {
            display: inline;
        }

            ul.breadcrumb li + li:before {
                padding: 8px;
                color: black;
                content: "/\00a0";
            }

    /*ul.breadcrumb li a {
                color: green;
            }*/

    /*auto*/
    .autocomplete {
        /*the container must be positioned relative:*/
        position: relative;
        display: inline-block;
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            .autocomplete-items div:hover {
                /*when hovering an item:*/
                background-color: #e9e9e9;
            }

    .autocomplete-active {
        /*when navigating through the items using the arrow keys:*/
        background-color: DodgerBlue !important;
        color: #ffffff;
    }
    /*weather*/
    #weather-icon {
        color: #2aaf8e;
        font-size: 50px;
        padding-right: 20px;
    }

    #weather-degrees {
        color: #2aaf8e;
        font-size: 30px;
    }

    .tempLow {
        color: #34a8fb;
        font-size: 16px;
    }

    .tempHigh {
        color: #fb3434;
        font-size: 16px;
    }
</style>
<html>

<body>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>


    <ul class="breadcrumb" style="margin-top:50px">
        Your are here:
        <li>@Html.ActionLink("Home", "Index", "Home")</li>
        <li>@Html.ActionLink("What you can do", "Index", "Home")</li>
        <li>@Html.ActionLink("Donate clothes", "Clothm", "Clothes")</li>
        <li style="color:black">Find now</li>

    </ul>


    <div class="text-center">
        <h2>Find clothes stores to donate</h2>
    </div>




    @using (Html.BeginForm("List", "Clothes", FormMethod.Get))
    {
        <form autocomplete="off">
            <div class="row" id="inputGroup" style="margin-top:50px">
                <div class="col-sm-3">
                </div>
                <div class="col-sm-6">
                    <div class="text-center">
                        @*<div class="autocomplete">*@
                        <input id="searchString" type="text" name="SearchString" placeholder="Search by Postcode e.g. 3000 or suburb" value="@Request["SearchString"]" autofocus style="display: inline-block;">
                        @*</div>*@
                        <button class="btn btn-success btn-lg" value="Search"> Search    <i class="glyphicon glyphicon-search"></i></button>
                    </div>
                </div>
                <div class="col-sm-3">
                </div>
            </div>
        </form>
    }

    <div class="text-center">
        <h3 class="center">@ViewBag.Mystring</h3>
        <h3 class="center">@ViewBag.Mystring2</h3>
    </div>


    <div class="row" style="margin-top:20px">

        <div class="col-sm-6" style="overflow-y: scroll; height:800px;">

            <ul @*class="list-group collapse"*@ id="myUL">
                @foreach (var item in Model)
                {
                    <li>
                        <div class="row list-group-item flex-column">

                            <h2 style="text-decoration:underline; font-size:26px;">@Html.ActionLink(@item.Name, "Details", new { id = item.Id })</h2>
                            @*<h2>@Html.DisplayFor(modelItem => item.Name)</h2>*@
                            <h3>Services</h3>
                            <p>@Html.DisplayFor(modelItem => item.Service)</p>
                            <h3>Address</h3>
                            <p id="address">
                                @Html.DisplayFor(modelItem => item.Address)
                                @Html.DisplayFor(modelItem => item.Suburb),@Html.DisplayFor(modelItem => item.Postcode)


                            </p>


                            <h3>Contact number:</h3>
                            <p>
                                @Html.DisplayFor(modelItem => item.Phone)
                            </p>
                            <div>@Html.ActionLink("Transport, Café & Parking information", "Map", new { id = item.Id }, new { @class = "btn btn-success btn-lg" })</div>



                            @*<div>@Html.ActionLink("Cafe near by", "Cafepos", new { id = item.Id }, new { @class = "btn btn-success btn-lg" })</div>*@
                        </div>
                    </li>

                }

            </ul>
            <button class="btn btn-lg" onclick="showAll()" style="margin-left:20px;">Reset</button>
        </div>
        <div class="col-sm-6">
            <div class="container">
                    <div class="row">

                        <div class="col-xs-6 text-center">
                            <table cellpadding="8">
                                <tr>
                                    <td colspan="7" valign="middle" align="center">
                                        <span id="weather-degrees"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <td><span id="day1"></span></td>
                                    <td><span id="day2"></span></td>
                                    <td><span id="day3"></span></td>
                                    <td><span id="day4"></span></td>
                                    <td><span id="day5"></span></td>
                                    <td><span id="day6"></span></td>
                                    <td><span id="day7"></span></td>
                                </tr>
                                <tr>
                                    <td><span id="icon1" style="font-size:30px;"></span></td>
                                    <td><span id="icon2" style="font-size:30px;"></span></td>
                                    <td><span id="icon3" style="font-size:30px;"></span></td>
                                    <td><span id="icon4" style="font-size:30px;"></span></td>
                                    <td><span id="icon5" style="font-size:30px;"></span></td>
                                    <td><span id="icon6" style="font-size:30px;"></span></td>
                                    <td><span id="icon7" style="font-size:30px;"></span></td>
                                </tr>
                                <tr>
                                    <td><span id="lTemp1" class="tempLow"></span></td>
                                    <td><span id="lTemp2" class="tempLow"></span></td>
                                    <td><span id="lTemp3" class="tempLow"></span></td>
                                    <td><span id="lTemp4" class="tempLow"></span></td>
                                    <td><span id="lTemp5" class="tempLow"></span></td>
                                    <td><span id="lTemp6" class="tempLow"></span></td>
                                    <td><span id="lTemp7" class="tempLow"></span></td>
                                </tr>
                                <tr>
                                    <td><span id="hTemp1" class="tempHigh"></span></td>
                                    <td><span id="hTemp2" class="tempHigh"></span></td>
                                    <td><span id="hTemp3" class="tempHigh"></span></td>
                                    <td><span id="hTemp4" class="tempHigh"></span></td>
                                    <td><span id="hTemp5" class="tempHigh"></span></td>
                                    <td><span id="hTemp6" class="tempHigh"></span></td>
                                    <td><span id="hTemp7" class="tempHigh"></span></td>
                                </tr>
                                <tr>
                                    <td colspan="7" valign="middle" align="center">
                                        <span id="stmt"></span>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            @*<div style="margin-top:20px">
                <a class="weatherwidget-io" href="https://forecast7.com/en/n37d81144d96/melbourne/" data-label_1="MELBOURNE" data-label_2="WEATHER" data-theme="hexellence" style="width:100%">MELBOURNE WEATHER</a>
            </div>*@
            <div>
                <h4 id="stmt"></h4>
            </div>
            <div id="map" style="margin-top:20px">

            </div>

        </div>
    </div>
    <div class="text-center">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("List",
    new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter = ViewBag.CurrentFilter,
        option = Request.QueryString["option"],
        search = Request.QueryString["search"]
    }))

    </div>
    <div class="text-center" style="width:100%">
        @*<p id="result" style="font-size:12px; color:black" class="center"></p>
            <p id="result2" style="font-size:12px; color:black" class="center"></p>*@


    </div>
    <a id="back-to-top" href="#" class="btn btn-primary btn-lg back-to-top" role="button" title="Click to return on the top page" data-toggle="tooltip" data-placement="left"><span class="glyphicon glyphicon-chevron-up"></span></a>

  
    <script>
        function myFunction() {
            var input, filter, ul, li, a, p, i, text, j;
            input = document.getElementById('myInput2');
            filter = input.value.toUpperCase();
            ul = document.getElementById("myUL");
            li = ul.getElementsByTagName('li');
            j = 0;
            // Loop through all list items, and hide those who don't match the search query
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByTagName('a');
                p = a[0].getElementsByTagName('p')[1];
                if (p.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    //      a[j].style.display = "";
                    j++;
                    $("#myUL").show();
                    li[i].style.display = "";


                } else {
                    //   a[j].style.display = "none";
                    li[i].style.display = "none";

                }
            }
            text = "There are " + j + " results found";
            document.getElementById("result").innerHTML = text;
        }

        function showAll() {
            // Declare variables
            var input, filter, ul, li, a, p, i;
            ul = document.getElementById("myUL");
            //ul.remove();
            li = ul.getElementsByTagName('li');

            // Loop through all list items, and hide those who don't match the search query
            for (i = 0; i < li.length; i++) {
                //a = li[i].getElementsByTagName('a');
                li[i].style.display = "";

            }

            $("#myUL").show();
            var count = $("#myUL").children().children().length;

            text = "There are " + count + " results found";

            //document.getElementById("result").innerHTML = text;

        }

        function myFunction2() {
            // Declare variables
            var input, filter, ul, li, a, p, i, text;
            input = document.getElementById('myInput2');
            filter = input.value.toUpperCase();
            ul = document.getElementById("myUL");
            li = ul.getElementsByTagName('li');

            // Loop through all list items, and hide those who don't match the search query
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByTagName('a');

                p = a[0].getElementsByTagName('p')[0];
                if (p.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    //      a[j].style.display = "";
                    li[i].style.display = "";

                } else {
                    //   a[j].style.display = "none";
                    li[i].style.display = "none";
                    text = "There is not correct one!"
                    document.getElementById("result").innerHTML = text;
                }
            }

        }


        $('#myInput2').keypress(function (e) {

            if (e.which == '13') {
                checkNumber();
            }
        });


        function checkNumber() {
            var x, text;

            // Get the value of the input field with id="numb"
            x = document.getElementById("myInput2").value;

            // If x is Not a Number or less than one or greater than 10
            if (isNaN(x)) {
                text = "Error:Input must not be null";
            }


            else if (x.length > 4 || x.length < 4) {
                text = "Error:Input must be 4 digits";
            }

            else if (x == 1234) {
                text = "Error:Input invailded with no post code is 1234 ";
            }
            else if (!(x.startsWith("3"))) {
                text = "Error:Input must be start with number 3 ";
            }

            else {
                text = null;
                var x = document.getElementById("mySelect").value;
                if (x == '1') {
                    myFunction();
                }
                if (x == '2') {
                    myFunction2();

                }
            }

            document.getElementById("demo").innerHTML = text;
        }

//------------------------------------------------

    </script>
    <script>
        $(document).ready(function () {
            $(window).scroll(function () {
                if ($(this).scrollTop() > 50) {
                    $('#back-to-top').fadeIn();
                } else {
                    $('#back-to-top').fadeOut();
                }
            });
            // scroll body to 0px on click
            $('#back-to-top').click(function () {
                $('#back-to-top').tooltip('hide');
                $('body,html').animate({
                    scrollTop: 0
                }, 800);
                return false;
            });

            $('#back-to-top').tooltip('show');

        });
    </script>
</body>

</html>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAByi7wbsNEkpNZtepHeoiKdThuSoJpO40&libraries=places&callback=initMap" async defer></script>
<script>
        $(document).ready(function () {

            var location = document.getElementById("location");
            var apiKey = 'b5720867ff3d98c666593de2ef32f09b'; // PLEASE SIGN UP FOR YOUR OWN API KEY
            var url = 'https://api.forecast.io/forecast/';

            navigator.geolocation.getCurrentPosition(success, error);

            function success(position) {
                latitude = position.coords.latitude;
                longitude = position.coords.longitude;

                setWeather(position.coords.latitude, position.coords.longitude);

            }
        });
                                  
</script>

<script type="text/javascript">
        function initMap() {
            var input, filter, ul, li, a, p, i, j, l, text, marker, address;
            var arr = [];
            var k = [];
            ul = document.getElementById("myUL");
            li = ul.getElementsByTagName('li');
            for (i = 0; i < li.length; i++) {
               
                arr.push(li[i].getElementsByTagName('p')[1]);
                
            }

            for (j = 0; j < arr.length; j++) {


                k.push(arr[j].innerText);
            }
       
            var uluru = { lat: -37.8136, lng: 144.9631 };
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 12,
                center: uluru,
                gestureHandling: 'greedy',
            });

            var infowindow = new google.maps.InfoWindow();
            var geocoder = new google.maps.Geocoder();

            var marker, x;

            for (x = 0; x < k.length; x++) {
                geocodeAddress(k[x]);
            }
            var lng, lat;
            function geocodeAddress(location) {
                geocoder.geocode({ 'address': location }, function (results, status) {
                    //alert(status);
                    if (status == google.maps.GeocoderStatus.OK) {
                     
                        map.setCenter(results[0].geometry.location);
                        createMarker(results[0].geometry.location, location);
                    }
                    else {
                        alert("some problem in geocode" + status);
                    }
                });
            }

            function createMarker(latlng, html) {
                var marker = new google.maps.Marker({
                    position: latlng,

                    map: map
                });

                //google.maps.event.addListener(marker, 'mouseover', function () {
                //    infowindow.setContent(html);
                //    infowindow.open(map, marker);

                //});
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.setContent(html);
                    infowindow.open(map, marker);
                    showAll();
                    //marker.setIcon('https://www.google.com/mapfiles/marker_green.png');
                    var input2, filter, ul, li, a, p, i, text, j;
                    //input2 = location.toString();
                    filter = html.toUpperCase();
                    ul = document.getElementById("myUL");
                    li = ul.getElementsByTagName('li');
                    j = 0;
                    // Loop through all list items, and hide those who don't match the search query
                    for (i = 0; i < li.length; i++) {

                        p = li[i].getElementsByTagName('p')[1];
                        //document.getElementById("result").innerHTML = filter;
                        //document.getElementById("result2").innerHTML = p;
                        if (p.innerText.toUpperCase().indexOf(filter) > -1) {
                            //      a[j].style.display = "";
                            //document.getElementById("result2").innerHTML = p;
                            $("#myUL").show();
                            li[i].style.display = "";



                        } else {
                            //   a[j].style.display = "none";
                            li[i].style.display = "none";

                        }
                    }

                });

                //google.maps.event.addListener(marker, 'mouseout', function () {
                //    infowindow.close();
                //});
            }
        }
</script>
<script>
        !function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = 'https://weatherwidget.io/js/widget.min.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'weatherwidget-io-js');
</script>
<script>
        function getLocation() {
            var mylatitude, mylongitude, latitude, longitude;
            navigator.geolocation.getCurrentPosition(success, error);

            function success(position) {
                mylatitude = position.coords.latitude;
                mylongitude = position.coords.longitude;
                //document.getElementById("result").innerHTML = 'Latitude is ' + mylatitude + '° <br> Longitude is ' + mylongitude + '°';
                //location.innerHTML = 'Latitude is ' + latitude + '° <br> Longitude is ' + longitude + '°';
                setWeather(mylatitude, mylongitude)

            }

            function error() {
                location.innerHTML = "Unable to retrieve your location";
            }
        }
        window.onload = getLocation;
</script>
<script>

        $(document).ready(function () {
            var bla = $('#searchString').val();
            document.getElementById("searchresult").innerHTML = bla;
        });
</script>


<script>
        function autocomplete(inp, arr) {
            /*the autocomplete function takes two arguments,
            the text field element and an array of possible autocompleted values:*/
            var currentFocus;
            /*execute a function when someone writes in the text field:*/
            inp.addEventListener("input", function (e) {
                var a, b, i, val = this.value;
                /*close any already open lists of autocompleted values*/
                closeAllLists();
                if (!val) { return false; }
                currentFocus = -1;
                /*create a DIV element that will contain the items (values):*/
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                /*append the DIV element as a child of the autocomplete container:*/
                this.parentNode.appendChild(a);
                /*for each item in the array...*/
                for (i = 0; i < arr.length; i++) {
                    /*check if the item starts with the same letters as the text field value:*/
                    if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                        /*create a DIV element for each matching element:*/
                        b = document.createElement("DIV");
                        /*make the matching letters bold:*/
                        b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                        b.innerHTML += arr[i].substr(val.length);
                        /*insert a input field that will hold the current array item's value:*/
                        b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                        /*execute a function when someone clicks on the item value (DIV element):*/
                        b.addEventListener("click", function (e) {
                            /*insert the value for the autocomplete text field:*/
                            inp.value = this.getElementsByTagName("input")[0].value;
                            /*close the list of autocompleted values,
                            (or any other open lists of autocompleted values:*/
                            closeAllLists();
                        });
                        a.appendChild(b);
                    }
                }
            });
            
            inp.addEventListener("keydown", function (e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {
                    currentFocus++;
                    
                    addActive(x);
                } else if (e.keyCode == 38) { 
                    currentFocus--;
                    
                    addActive(x);
                } else if (e.keyCode == 13) {
                   
                    e.preventDefault();
                    if (currentFocus > -1) {
                        /*and simulate a click on the "active" item:*/
                        if (x) x[currentFocus].click();
                    }
                }
            });
            function addActive(x) {
                /*a function to classify an item as "active":*/
                if (!x) return false;
                /*start by removing the "active" class on all items:*/
                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);
                /*add class "autocomplete-active":*/
                x[currentFocus].classList.add("autocomplete-active");
            }
            function removeActive(x) {
                /*a function to remove the "active" class from all autocomplete items:*/
                for (var i = 0; i < x.length; i++) {
                    x[i].classList.remove("autocomplete-active");
                }
            }
            function closeAllLists(elmnt) {
                /*close all autocomplete lists in the document,
                except the one passed as an argument:*/
                var x = document.getElementsByClassName("autocomplete-items");
                for (var i = 0; i < x.length; i++) {
                    if (elmnt != x[i] && elmnt != inp) {
                        x[i].parentNode.removeChild(x[i]);
                    }
                }
            }
            /*execute a function when someone clicks in the document:*/
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });
        }

        /*An array containing all the country names in the world:*/
        var countries = ["3000", "Melbourne,3000",
            "3001", "Melbourne,3001",
            "3002", "East Melbourne,3002",
            "3003", "West Melbourne,3003",
            "3004", "Melbourne,3004",
            "3005", "World Trade Centre,3005",
            "3161", "Caulfield North,3163",
            "3053", "Carlton,3053",
            "3054", "Carlton North,3054", "Princes Hill,3054",
            "3168", "Clayton","Clayton,3168",
            "3162", "Caulfield,3162", "Caulfield South,3162",
            "3163", "Carnegie,3163", "Glen Huntly,3163", "Murrumbeena,3163",
            "3006", "3008", "3010", "3011", "3012", "3013", "3015", "3016", "3017", "3018", "3019", "3020", "3021", "3022", "3023", "3024", "3025"];

        /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
        autocomplete(document.getElementById("searchString"), countries);
</script>


<script>
        function setWeather(latitude, longitude) {

            var weekdays = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
            var date = new Date();
            var apiKey = '8b95c3eb8ded9d41df00509bdc219e90';
            var url = 'https://api.forecast.io/forecast/';
            // alert(url + apiKey + "/" + latitude + "," + longitude + "?callback=?");
            $.getJSON(url + apiKey + "/" + latitude + "," + longitude + "?callback=?", function (data) {

                var celsius = ((data.currently.temperature - 32) / 1.8).toFixed(2);
                var cel1 = ((data.daily.data[0].temperatureHigh - 32) / 1.8).toFixed(2);
                var cel2 = ((data.daily.data[1].temperatureHigh - 32) / 1.8).toFixed(2);
                var cel3 = ((data.daily.data[2].temperatureHigh - 32) / 1.8).toFixed(2);
                var cel4 = ((data.daily.data[3].temperatureHigh - 32) / 1.8).toFixed(2);
                var cel5 = ((data.daily.data[4].temperatureHigh - 32) / 1.8).toFixed(2);
                var cel6 = ((data.daily.data[5].temperatureHigh - 32) / 1.8).toFixed(2);
                var cel7 = ((data.daily.data[6].temperatureHigh - 32) / 1.8).toFixed(2);
                var lcel1 = ((data.daily.data[0].temperatureLow - 32) / 1.8).toFixed(2);
                var lcel2 = ((data.daily.data[1].temperatureLow - 32) / 1.8).toFixed(2);
                var lcel3 = ((data.daily.data[2].temperatureLow - 32) / 1.8).toFixed(2);
                var lcel4 = ((data.daily.data[3].temperatureLow - 32) / 1.8).toFixed(2);
                var lcel5 = ((data.daily.data[4].temperatureLow - 32) / 1.8).toFixed(2);
                var lcel6 = ((data.daily.data[5].temperatureLow - 32) / 1.8).toFixed(2);
                var lcel7 = ((data.daily.data[6].temperatureLow - 32) / 1.8).toFixed(2);
                $('#weather-degrees').text(celsius + "° C");
                $('#lTemp1').text(lcel1 + "° C");
                $('#lTemp2').text(lcel2 + "° C");
                $('#lTemp3').text(lcel3 + "° C");
                $('#lTemp4').text(lcel4 + "° C");
                $('#lTemp5').text(lcel5 + "° C");
                $('#lTemp6').text(lcel6 + "° C");
                $('#lTemp7').text(lcel7 + "° C");
                $('#hTemp1').text(cel1 + "° C");
                $('#hTemp2').text(cel2 + "° C");
                $('#hTemp3').text(cel3 + "° C");
                $('#hTemp4').text(cel4 + "° C");
                $('#hTemp5').text(cel5 + "° C");
                $('#hTemp6').text(cel6 + "° C");
                $('#hTemp7').text(cel7 + "° C");
                var dt = new Date();
                dt.setDate(date.getDay());
                $('#day1').text(weekdays[date.getDay()]);
                $('#day2').text(weekdays[dt.getDay()]);
                dt.setDate(date.getDay() + 1);
                $('#day3').text(weekdays[dt.getDay()]);
                dt.setDate(date.getDay() + 2);
                $('#day4').text(weekdays[dt.getDay()]);
                dt.setDate(date.getDay() + 3);
                $('#day5').text(weekdays[dt.getDay()]);
                dt.setDate(date.getDay() + 4);
                $('#day6').text(weekdays[dt.getDay()]);
                dt.setDate(date.getDay() + 5);
                $('#day7').text(weekdays[dt.getDay()]);
                $('#weather-icon').removeClass();
                var stmt = data.currently.icon;
                if (stmt = "clear-day") { $("#stmt").text("It's a good day today to do your bit") }
                else if (stmt = "clear-night") { $("#stmt").text("It's clear night, you can do your bit") }
                else if (stmt = "rain") { $("#stmt").text("It's rainy outside, don't forget your umbrella") }
                else if (stmt = "snow") { $("#stmt").text("It's snowy out, you can go tomorrow to do your bit") }
                else if (stmt = "sleet") { $("#stmt").text("Weather is sleety, you can go tomorrow to do your bit.") }
                else if (stmt = "wind") { $("#stmt").text("It's clear day, you can go and do your bit") }
                else if (stmt = "fog") { $("#stmt").text("It's clear day, you can go and do your bit") }
                else if (stmt = "cloudy") { $("#stmt").text("Its cloudy out, you can go and do your bit.") }
                else if (stmt = "partly-cloudy-day") { $("#stmt").text("Its cloudy out, you can go and do your bit.") }
                else if (stmt = "partly-cloudy-night") { $("#stmt").text("Its cloudy out, you can go do your bit.") }
                //$("#icon1").addClass("ion-ios-sunny-outline");
                for (var i = 0; i < data.daily.data.length; i++) {
                    var icon = "#icon" + (i + 1);
                    switch (data.daily.data[i].icon) {
                        case "clear-day":
                            $(icon).addClass("ion-ios-sunny-outline");
                            break;
                        case "clear-night":
                            $(icon).addClass("ion-ios-moon-outline");
                            break;
                        case "rain":
                            $(icon).addClass("ion-ios-rainy-outline");
                            break;
                        case "snow":
                            $(icon).addClass("ion-ios-snowy");
                            break;
                        case "sleet":
                            $(icon).addClass("ion-ios-rainy-outline");
                            break;
                        case "wind":
                            $(icon).addClass("ion-ios-cloudy-outline");
                            break;
                        case "fog":
                            $(icon).addClass("ion-ios-cloudy");
                            break;
                        case "cloudy":
                            $(icon).addClass("ion-ios-cloudy-outline");
                            break;
                        case "partly-cloudy-day":
                            $(icon).addClass("ion-ios-partlysunny-outline");
                            break;
                        case "partly-cloudy-night":
                            $(icon).addClass("ion-ios-cloudy-night-outline");
                            break;
                    }
                }

            });
        }
</script>